<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sast.woc.mapper.UserMapper">
    <select id="sample" parameterType="string">
--         注意，这里这个sql语句只是示例
        SELECT * FROM `user` WHERE user_name =#{value};
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="com.sast.woc.mapper.UserMapper">
        SELECT * FROM user WHERE name = #{name}
    </select>

    <!-- 根据名称删除用户 -->
    <delete id="deleteByName" parameterType="java.lang.String">
        DELETE FROM user WHERE name = #{name}
    </delete>
    <!-- 添加用户并将其role字段设为0  -->
    <insert id="AddUser" parameterType="com.sast.woc.mapper.UserMapper">
        <if test="!NameIfExisted(name)">
            INSERT INTO user(name, age, role
            <if test="email != null">
                , email
            </if>
            ) VALUES (#{name}, #{age}, 'user'
            <if test="email != null">
                , #{email}
            </if>
            )
        </if>
    </insert>
    <!-- 根据名称来保存token -->
    <update id="SaveTokenByName" parameterType="map">
        <!-- 首先判断该用户名是否存在 -->
        <if test="NameIfExisted(name)">
            <!-- 如果用户名存在，则调用UpdateTokenByName方法更新该用户的Token信息 -->
            <include refid="UpdateTokenByName"/>
        </if>
    </update>
    <!-- Helper Method -->
    <update id="UpdateTokenByName" parameterType="map">
        UPDATE user SET token = #{token} WHERE name = #{name}
    </update>

    <!-- 判断用户名是否存在 -->
    <select id="NameIfExisted" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM user WHERE name = #{name}
    </select>

    <!-- 判断用户名和密码是否匹配 -->
    <select id="IfNamePasswordMatch" parameterType="java.util.Map" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM user WHERE name = #{name} AND password = #{password}
    </select>

</mapper>
